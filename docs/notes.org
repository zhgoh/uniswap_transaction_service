#+title: Notes

* Altonomy assessment

Just some notes to myself while exploring/deciding what to do

* Things to figure out

How to make my backend system like Flask run in bg to poll live data?
Considering to use go instead

* USDC/ETH pool

On uniswap, the pool is, https://info.uniswap.org/#/pools/0x88e6a0c2ddd26feeb64f039a2c41296fcb3f5640
0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2 is the contract address.
0x88e6a0c2ddd26feeb64f039a2c41296fcb3f5640 is the address.

* Getting data from etherscan

To get data from etherscan, there is a doc, https://docs.etherscan.io/api-endpoints/accounts#get-a-list-of-erc20-token-transfer-events-by-address
https://api.etherscan.io/api
   ?module=account
   &action=tokentx
   &contractaddress=0x9f8f72aa9304c8b593d555f12ef6589cc3a579a2
   &address=0x4e83362442b8d1bec281594cea3050c8eb01311c
   &page=1
   &offset=100
   &startblock=0
   &endblock=27025780
   &sort=asc
   &apikey=YourApiKeyToken

* Getting USDT/ETH

   https://api.binance.com/api/v3/depth?symbol=ETHUSDT&limit=1

* timestamp in response

The timestamp is unix timestamp, use this to convert https://unixtime.org/

* Computing transaction fee

https://ethereum.stackexchange.com/questions/82315/etherscan-api-how-to-get-transaction-fee

To get the transaction fee, use gas_price multiply by gas_used and divide

fee (WEI) = gas_price x gas_used

* System designs

This are just some of my thoughts at the moment, I was initially thinking of using Python + Flask to build the whole thing, but I guess I was too fixated on the, how do
I run the polling in the background while running flask at the same time. Do I write a seperate scripts to poll it into a db of sorts and let the flask access it that way?

Then I also thought about including the polling into the server, which can be run seperately (maybe via celery or some sort of bg task thing) which I admit I am not too
familiar with. I might revisit this if I have time left.

Also at the same time, I thought of making use of Go because of it's goroutine, I thought it makes sense for doing this kind of task. Also as I explored, the api to get
the transaction from etherscan and prices from Binance was not too difficulty, I suppose I can skip using libraries, I will discuss my decisions of not using libraries.

* External libraries

I have given this some thoughts as well, I want to make use of libraries if I can, but for this assignment, I thought to not use too many dependecies and keep it as simple
as possible since the task is relatively easy achievable in (Go), let's see.
